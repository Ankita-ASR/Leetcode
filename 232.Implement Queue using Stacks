class MyQueue {
public:
stack<int>s;
    MyQueue() {
        
    }
    
    void push(int x) {
      s.push(x);  
    }
    
    int pop() {
        stack<int>newS;
        int k, last;
        while(!s.empty()){
         k=s.top();
         s.pop();
         if(s.empty()){
         last=k;
         break;
         }
       newS.push(k);
        }
        while(!newS.empty())
        {
            s.push(newS.top());
            newS.pop();
        }
        return last;
    }
    
    int peek() {
          stack<int>newS;
        int k, last;
        while(!s.empty()){
         k=s.top();
         s.pop();
         if(s.empty()){
         last=k;
         }
        newS.push(k);
        }
        while(!newS.empty())
        {
            s.push(newS.top());
            newS.pop();
        }
          return last;
    }
  

    
    bool empty() {
      return  s.empty();
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */
